# For complete documentation of this file, please see Geany's main documentation
[styling=CAML]
# Edit these in the colorscheme .conf file instead
# default=default
# comment=comment
# comment1=comment
# comment2=comment
# comment3=comment
# number=number_1
# keyword=keyword_1
# keyword2=keyword_2
# keyword3=keyword_3
# string=string_1
# char=character
# operator=operator
# identifier=identifier_1
# tagname=preprocessor
# linenum=number_2
# white=default

[keywords]
keywords=abstract and as assert base begin bprintf class default delegate do done downcast downto elif else end eprintfn exception extern false finally fixed for fun function global if in inherit inline interface internal lazy let let! match match! member module mutable namespace new null of open or override private public rec return return! select static struct then to true try type upcast use use! val void when while with yield yield! asr land lor lsl lsr lxor mod sig abs acos asin atan atan2 ceil cos cosh eprintf failwith failwithf floor fprintf fprintfn fst invalidArg kbprintf kfprintf kprintf ksprintf max min nameof not pown printf printfn raise round seq set sin sinh snd sprintf sqrt tan tanh typeof add allPairs append average averageBy base1 base2 blit cache cast choose chunkBySize collect compareWith concat contains containsKey copy count countBy create createBased delay difference distinct distinctBy empty except exists exists2 exactlyOne fill filter find findBack findIndex findIndexBack findKey fold fold2 foldBack foldBack2 forall forall2 get groupBy head ignore indexed init initBased initInfinite intersect intersectMany isEmpty isProperSubset isProperSuperset isSubset isSuperset item iter iter2 iteri iteri2 last length length1 length2 length3 length4 map map2 map3 mapFold mapFoldBack mapi mapi2 maxBy maxElement minBy minElement ofArray ofList ofSeq pairwise partition permute pick readonly rebase reduce reduceBack remove replicate rev scan scanBack singleton skip skipWhile sort sortBy sortByDescending sortDescending sortInPlace sortInPlaceBy sortInPlaceWith sortWith splitAt splitInto sub sum sumBy tail take takeWhile toArray toList toSeq transpose truncate tryExactlyOne tryFind tryFindBack tryFindIndex tryFindIndexBack tryHead tryItem tryFindKey tryLast tryPick unfold union unionMany unzip unzip3 where windowed zeroCreate zeroCreateBased zip zip3

keywords_optional=Array Array2D Array3D Array4D BigInteger Boolean Byte Char Collections Core CultureInfo DateTime Decimal Double Environment Expr Float FSharp Globalization Int16 Int32 Int64 IntPtr IO Linq List Map Math Microsoft NumberStyles Object Parallel Printf Random Regex ResizeArray SByte Seq Set Single String System UInt16 UInt32 UInt64 UIntPtr ArgumentException array bigint bool byte byref char comparison Console decimal double enum equality Error Exception exn float float32 inref int int8 int16 int32 int64 list nativeint nativeptr None obj Ok option Option outref ref Result sbyte Some single string unmanaged unativeint uint uint8 uint16 uint32 uint64 unit void voidptr voption

operator=_ ~ ' ^ + - * / % @ . , : ; ( ) [ ] { } | < = > ?

[lexer_properties=CAML]

[settings]
lexer_filetype=CAML

# default extension used when saving files
extension=fs

# MIME type
mime_type=text/x-fsharp

# the following characters are these which a "word" can contains, see documentation
wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# will NOT be formatted by CAML lexer
# comment_single=//
# multiline comments
comment_open=(*
comment_close=*)
comment_use_indent=true

[indentation]
width=4
# 0 is spaces, 1 is tabs, 2 is tab & spaces
type=0

[build-menu]
FT_00_LB=_Compile
FT_00_CM=dotnet build /nologo
FT_00_WD=%d
EX_00_LB=_Execute
EX_00_CM=dotnet fsi /nologo /exec "%f"
EX_00_WD=%d
EX_01_LB=Terminal here
EX_01_CM=x-terminal-emulator
EX_01_WD=%d
